The game is simple. You initially have ‘H’ amount of health and ‘A’ amount of armor. At any instant you can live in any of the three places - fire, water and air. 
After every unit time, you have to change your place of living. For example if you are currently living at fire, you can either step into water or air.

If you step into air, your health increases by 3 and your armor increases by 2

If you step into water, your health decreases by 5 and your armor decreases by 10

If you step into fire, your health decreases by 20 and your armor increases by 5

If your health or armor becomes <=0, you will die instantly

Find the maximum time you can survive.

----------------------------------------------------

I used memoization for this problem because each state sometimes depends on a state in the future too ... Like f(i, ... ) can depend on f(i + 2, ... ) as well as f(i - 5, ..)

I initially used a 3-D function f(health, armour, element)

But it turns out the third dimension is unnecessary after making the following observation - 

It is always possible to survive for one second by going into air. The optimal strategy always consists of going to air first.

After stepping into air, the best strategy is to then go to either (fire or water) and then return BACK to air.

It is never optimal to go from fire to water as both health and armour decreases.
If we can survive x seconds by going from water to fire, we can survive for at least x + 1 seconds by first going to air and then to fire. 

If we're at either fire or water, then go to air.

2. It is never possible to die in air.

So, f(health, armour) = 2 + max{f(health - 2, armour - 8), f(health - 17, armour + 7)}

If health, armour <= 0, return -1 .... we count 2 seconds - one in air, one somewhere else. We only subtract 1 because it is guaranteed we lived the first second.
We only died in the 2nd second. 

----------------------------------------------------------------

const int MAX_HEALTH = 1000 + 10, MAX_ARMOUR = 1000 + 10;
int maximum_survival_time[MAX_HEALTH][MAX_ARMOUR];

int get_max_survival_time(int health, int armour)
{
    if(health <= 0 || armour <= 0)
    {
        return -1;
    }

    if(maximum_survival_time[health][armour] == -1)
        maximum_survival_time[health][armour] = 2 + max(get_max_survival_time(health - 2,armour - 8), get_max_survival_time(health - 17, armour + 7));

    return maximum_survival_time[health][armour];
}

void solve()
{
    int health, armour;
    scanf("%d %d", &health, &armour);

    int max_surival_time = get_max_survival_time(health, armour);

    printf("%d\n", max_surival_time);
}

